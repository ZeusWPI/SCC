// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: song_history.sql

package sqlc

import (
	"context"
)

const createSongHistory = `-- name: CreateSongHistory :one

INSERT INTO song_history (song_id)
VALUES (?)
RETURNING id, song_id, created_at
`

// CRUD
func (q *Queries) CreateSongHistory(ctx context.Context, songID int64) (SongHistory, error) {
	row := q.db.QueryRowContext(ctx, createSongHistory, songID)
	var i SongHistory
	err := row.Scan(&i.ID, &i.SongID, &i.CreatedAt)
	return i, err
}

const getLastSongHistory = `-- name: GetLastSongHistory :one


SELECT id, song_id, created_at
FROM song_history
ORDER BY created_at DESC
LIMIT 1
`

// Other
func (q *Queries) GetLastSongHistory(ctx context.Context) (SongHistory, error) {
	row := q.db.QueryRowContext(ctx, getLastSongHistory)
	var i SongHistory
	err := row.Scan(&i.ID, &i.SongID, &i.CreatedAt)
	return i, err
}
